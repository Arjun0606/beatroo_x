rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // User photos subcollection
    match /users/{userId}/photos/{photoId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Music posts collection (global read access)
    match /music_posts/{postId} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Music activity collection
    match /music_activity/{activityId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Social Music Collections
    
    // User current activity (real-time music sharing)
    match /user_current_activity/{userId} {
      allow read: if request.auth != null; // Anyone can read current activity for discovery
      allow write, delete: if request.auth != null && request.auth.uid == userId; // Only owner can update
    }
    
    // Music likes
    match /music_likes/{likeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.fromUserId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.fromUserId;
    }
    
    // Music plays
    match /music_plays/{playId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.fromUserId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.fromUserId;
    }
    
    // Music notifications
    match /music_notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.toUserId;
      allow create: if request.auth != null;
    }
    
    // Daily leaderboards (read-only for users, write access for backend/admin)
    match /daily_leaderboards/{date} {
      allow read: if request.auth != null;
      // Write access would be granted to admin/cloud functions only
    }
  }
} 